import React, { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { MapPin, Upload, Send, X } from "lucide-react";
// import { InteractiveMap } from "./InteractiveMap";

const RegisterForm = () => {
  const [accommodationTypes, setAccommodationTypes] = useState([]);
  const [amenities, setAmenities] = useState([]);
  const [coordinates, setCoordinates] = useState({
    lat: 13.7563,
    lng: 100.5018,
  });
  const [acceptTerms, setAcceptTerms] = useState(false);
  const [checkinTime, setCheckinTime] = useState("");
  const [checkoutTime, setCheckoutTime] = useState("");

  const accommodationOptions = [
    {
      value: "tent-area",
      label: "‡∏•‡∏≤‡∏ô‡∏Å‡∏≤‡∏á‡πÄ‡∏ï‡πá‡∏ô‡∏ó‡πå (Bring your own tent)",
      description: "‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÇ‡∏•‡πà‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ô‡∏≥‡πÄ‡∏ï‡πá‡∏ô‡∏ó‡πå‡∏°‡∏≤‡πÄ‡∏≠‡∏á",
    },
    {
      value: "rv-site",
      label: "‡∏à‡∏∏‡∏î‡∏à‡∏≠‡∏î‡∏£‡∏ñ‡∏ö‡πâ‡∏≤‡∏ô / ‡∏Ñ‡∏≤‡∏£‡∏≤‡∏ß‡∏≤‡∏ô (RV / Campervan site)",
      description: "‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏î‡∏£‡∏ñ‡∏ö‡πâ‡∏≤‡∏ô ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏ü/‡∏ô‡πâ‡∏≥",
    },
    {
      value: "cabin",
      label: "‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å / Cabin / Cottage",
      description: "‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å‡πÅ‡∏ö‡∏ö‡∏ö‡πâ‡∏≤‡∏ô‡πÑ‡∏°‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡∏ö‡πâ‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏£‡∏π‡∏õ",
    },
  ];

  // Generate time options for dropdowns
  const generateTimeOptions = () => {
    const times = [];
    for (let hour = 0; hour < 24; hour++) {
      for (let minute = 0; minute < 60; minute += 30) {
        const timeString = `${hour.toString().padStart(2, "0")}:${minute
          .toString()
          .padStart(2, "0")}`;
        times.push(timeString);
      }
    }
    return times;
  };

  const timeOptions = generateTimeOptions();

  const handleSubmit = (e) => {
    e.preventDefault();
  };

  const handleAccommodationTypeSelect = (e) => {};

  return (
    <div className="max-w-4xl mx-auto">
      <div className="text-center mb-8">
        <p className="text-lg text-gray-600 mt-4">
          ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡πÅ‡∏•‡∏∞‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
          ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÄ‡∏ô‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß
          ‡∏£‡∏ß‡∏°‡∏ñ‡∏∂‡∏á‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
        </p>
      </div>

      <form onSubmit={handleSubmit} className="space-y-8">
        {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£ */}
        <Card>
          <CardHeader>
            <CardTitle className="text-2xl text-red-700">
              1. ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <Label htmlFor="name">‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• / ‡∏ä‡∏∑‡πà‡∏≠‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à *</Label>
                <Input id="name" required className="mt-1" />
              </div>
              <div>
                <Label htmlFor="phone">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå *</Label>
                <Input id="phone" type="tel" required className="mt-1" />
              </div>
            </div>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <Label htmlFor="email">‡∏≠‡∏µ‡πÄ‡∏°‡∏• *</Label>
                <Input id="email" type="email" required className="mt-1" />
              </div>
              <div>
                <Label htmlFor="website">‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)</Label>
                <Input id="website" type="url" className="mt-1" />
              </div>
            </div>
            <div>
              <Label htmlFor="address">‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ *</Label>
              <Textarea id="address" required className="mt-1" rows={3} />
            </div>
          </CardContent>
        </Card>

        {/* ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î */}
        <Card>
          <CardHeader>
            <CardTitle className="text-2xl text-red-700">
              2. ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-6">
            <div>
              <Label className="text-base font-medium">
                ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å * (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó)
              </Label>
              <Select onValueChange={handleAccommodationTypeSelect}>
                <SelectTrigger className="mt-2">
                  <SelectValue placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å" />
                </SelectTrigger>
                <SelectContent className="bg-white">
                  {accommodationOptions.map((option) => (
                    <SelectItem
                      key={option.value}
                      value={option.value}
                      disabled={accommodationTypes.includes(option.value)}
                    >
                      <div className="flex flex-col">
                        <span className="font-medium">{option.label}</span>
                        <span className="text-xs text-gray-600">
                          {option.description}
                        </span>
                      </div>
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>

              {/* ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß */}
              {accommodationTypes.length > 0 && (
                <div className="mt-4 space-y-2">
                  <Label className="text-sm font-medium text-gray-700">
                    ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:
                  </Label>
                  <div className="flex flex-wrap gap-2">
                    {accommodationTypes.map((type) => {
                      const option = getSelectedOption(type);
                      return (
                        <div
                          key={type}
                          className="flex items-center bg-red-50 border border-red-200 rounded-lg px-3 py-2"
                        >
                          <span className="text-sm font-medium text-red-700">
                            {option?.label}
                          </span>
                          <button
                            type="button"
                            onClick={() => removeAccommodationType(type)}
                            className="ml-2 text-red-500 hover:text-red-700"
                          >
                            <X className="h-4 w-4" />
                          </button>
                        </div>
                      );
                    })}
                  </div>
                </div>
              )}
            </div>

            {/* ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å */}
            {accommodationTypes.map((type) => {
              const option = getSelectedOption(type);
              if (!option) return null;

              // Glamping, Cabin, Safari Tent, Tiny House
              if (
                ["glamping", "cabin", "safari-tent", "tiny-house"].includes(
                  type
                )
              ) {
                return (
                  <div key={type} className="border-t pt-6">
                    <h4 className="text-lg font-medium text-red-700 mb-4">
                      üèïÔ∏è ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î: {option.label}
                    </h4>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div>
                        <Label htmlFor={`${type}-units`}>
                          ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏¢‡∏π‡∏ô‡∏¥‡∏ï / ‡∏´‡∏•‡∏±‡∏á *
                        </Label>
                        <Input
                          id={`${type}-units`}
                          type="number"
                          min="1"
                          className="mt-1"
                        />
                      </div>
                      <div>
                        <Label htmlFor={`${type}-size`}>
                          ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì (‡∏Å‡∏ß‡πâ‡∏≤‡∏á x ‡∏¢‡∏≤‡∏ß ‡πÄ‡∏°‡∏ï‡∏£)
                        </Label>
                        <Input
                          id={`${type}-size`}
                          placeholder="‡πÄ‡∏ä‡πà‡∏ô 4 x 6 ‡πÄ‡∏°‡∏ï‡∏£"
                          className="mt-1"
                        />
                      </div>
                    </div>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mt-4">
                      <div className="flex items-center space-x-2">
                        <Checkbox id={`${type}-bathroom`} />
                        <Label htmlFor={`${type}-bathroom`}>
                          ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏¢‡∏π‡∏ô‡∏¥‡∏ï‡∏°‡∏µ‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡πÉ‡∏ô‡∏ï‡∏±‡∏ß
                        </Label>
                      </div>
                      <div className="flex items-center space-x-2">
                        <Checkbox id={`${type}-ac`} />
                        <Label htmlFor={`${type}-ac`}>‡∏°‡∏µ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏Å‡∏≤‡∏®</Label>
                      </div>
                    </div>
                  </div>
                );
              }

              // RV Site, Car Camping
              if (["rv-site", "car-camping"].includes(type)) {
                return (
                  <div key={type} className="border-t pt-6">
                    <h4 className="text-lg font-medium text-red-700 mb-4">
                      üöê ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î: {option.label}
                    </h4>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div>
                        <Label htmlFor={`${type}-spots`}>
                          ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏à‡∏∏‡∏î‡∏à‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö *
                        </Label>
                        <Input
                          id={`${type}-spots`}
                          type="number"
                          min="1"
                          className="mt-1"
                        />
                      </div>
                      <div>
                        <Label htmlFor={`${type}-spot-size`}>
                          ‡∏Ç‡∏ô‡∏≤‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πà‡∏≠ 1 ‡∏à‡∏∏‡∏î‡∏à‡∏≠‡∏î
                        </Label>
                        <Input
                          id={`${type}-spot-size`}
                          placeholder="‡πÄ‡∏ä‡πà‡∏ô 8 x 15 ‡πÄ‡∏°‡∏ï‡∏£"
                          className="mt-1"
                        />
                      </div>
                    </div>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mt-4">
                      <div className="flex items-center space-x-2">
                        <Checkbox id={`${type}-electricity`} />
                        <Label htmlFor={`${type}-electricity`}>
                          ‡∏°‡∏µ‡∏à‡∏∏‡∏î‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏ü‡∏ü‡πâ‡∏≤
                        </Label>
                      </div>
                      <div className="flex items-center space-x-2">
                        <Checkbox id={`${type}-water`} />
                        <Label htmlFor={`${type}-water`}>
                          ‡∏°‡∏µ‡∏ô‡πâ‡∏≥‡∏î‡∏µ / ‡∏ô‡πâ‡∏≥‡πÄ‡∏™‡∏µ‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
                        </Label>
                      </div>
                    </div>
                  </div>
                );
              }

              // Tent Area, Tent Rental
              if (["tent-area", "tent-rental"].includes(type)) {
                return (
                  <div key={type} className="border-t pt-6">
                    <h4 className="text-lg font-medium text-red-700 mb-4">
                      ‚õ∫ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î: {option.label}
                    </h4>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div>
                        <Label htmlFor={`${type}-tent-spots`}>
                          ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ï‡πá‡∏ô‡∏ó‡πå / ‡∏à‡∏∏‡∏î‡∏Å‡∏≤‡∏á‡πÄ‡∏ï‡πá‡∏ô‡∏ó‡πå‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö *
                        </Label>
                        <Input
                          id={`${type}-tent-spots`}
                          type="number"
                          min="1"
                          className="mt-1"
                        />
                      </div>
                      <div>
                        <Label htmlFor={`${type}-tent-size`}>
                          ‡∏Ç‡∏ô‡∏≤‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πà‡∏≠‡πÅ‡∏õ‡∏•‡∏á
                        </Label>
                        <Input
                          id={`${type}-tent-size`}
                          placeholder="‡πÄ‡∏ä‡πà‡∏ô 4 x 4 ‡πÄ‡∏°‡∏ï‡∏£"
                          className="mt-1"
                        />
                      </div>
                    </div>
                    <div className="mt-4">
                      <div className="flex items-center space-x-2">
                        <Checkbox id={`${type}-shade`} />
                        <Label htmlFor={`${type}-shade`}>
                          ‡∏°‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏£‡πà‡∏°‡πÑ‡∏°‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡∏≤
                        </Label>
                      </div>
                    </div>
                  </div>
                );
              }

              return null;
            })}

            <div>
              <Label htmlFor="description">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å *</Label>
              <Textarea
                id="description"
                placeholder="‡πÄ‡∏ô‡πâ‡∏ô‡∏à‡∏∏‡∏î‡πÄ‡∏î‡πà‡∏ô, ‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å, ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢, ‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏Å‡∏≤‡∏®"
                required
                className="mt-1"
                rows={4}
              />
            </div>
          </CardContent>
        </Card>

        {/* ‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏ñ‡∏ö‡πâ‡∏≤‡∏ô */}
        <Card>
          <CardHeader>
            <CardTitle className="text-2xl text-red-700">
              3. ‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏ñ‡∏ö‡πâ‡∏≤‡∏ô
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-6">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              {[
                "‡∏°‡∏µ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡πÉ‡∏´‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠",
                "‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏õ‡∏≤",
                "‡∏à‡∏∏‡∏î‡∏ó‡∏¥‡πâ‡∏á‡∏ô‡πâ‡∏≥‡πÄ‡∏™‡∏µ‡∏¢ (Sewage disposal)",
                "‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï (Wi-Fi)",
                "‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏∞‡∏ö‡∏≤‡∏¢‡∏ô‡πâ‡∏≥‡∏ù‡∏ô‡πÅ‡∏•‡∏∞‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏∞‡∏≠‡∏≤‡∏î",
              ].map((amenity) => (
                <div key={amenity} className="flex items-center space-x-2">
                  <Checkbox
                    id={amenity}
                    checked={amenities.includes(amenity)}
                    onCheckedChange={(checked) =>
                      handleAmenityChange(amenity, !!checked)
                    }
                  />
                  <Label htmlFor={amenity}>{amenity}</Label>
                </div>
              ))}
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <Label htmlFor="electric-power">
                  ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏ü‡∏ü‡πâ‡∏≤ (‡πÅ‡∏≠‡∏°‡∏õ‡πå/‡πÇ‡∏ß‡∏•‡∏ï‡πå)
                </Label>
                <Input
                  id="electric-power"
                  placeholder="‡πÄ‡∏ä‡πà‡∏ô 30A/220V"
                  className="mt-1"
                />
              </div>
              <div>
                <Label htmlFor="water-system">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏õ‡∏≤</Label>
                <Input
                  id="water-system"
                  placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏°‡∏µ‡∏à‡∏∏‡∏î‡πÄ‡∏ï‡∏¥‡∏°‡∏ô‡πâ‡∏≥‡∏™‡∏∞‡∏≠‡∏≤‡∏î"
                  className="mt-1"
                />
              </div>
            </div>
          </CardContent>
        </Card>

        {/* ‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ */}
        <Card>
          <CardHeader>
            <CardTitle className="text-2xl text-red-700">
              4. ‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-6">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              {[
                "‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡πÅ‡∏•‡∏∞‡∏´‡πâ‡∏≠‡∏á‡∏≠‡∏≤‡∏ö‡∏ô‡πâ‡∏≥",
                "‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏∏‡∏Ç‡∏≤/‡∏™‡∏∏‡∏Ç‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ô‡∏û‡∏¥‡∏Å‡∏≤‡∏£",
                "‡∏à‡∏∏‡∏î‡∏ó‡∏≥‡∏≠‡∏≤‡∏´‡∏≤‡∏£ (‡∏Ñ‡∏£‡∏±‡∏ß‡∏Å‡∏•‡∏≤‡∏á/‡πÄ‡∏ï‡∏≤‡∏õ‡∏¥‡πâ‡∏á‡∏¢‡πà‡∏≤‡∏á)",
                "‡∏ö‡∏£‡∏¥‡πÄ‡∏ß‡∏ì‡∏û‡∏±‡∏Å‡∏ú‡πà‡∏≠‡∏ô/‡∏•‡∏≤‡∏ô‡∏Å‡∏≤‡∏á‡πÄ‡∏ï‡πá‡∏ô‡∏ó‡πå",
                "‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏≠‡∏î‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå‡πÄ‡∏™‡∏£‡∏¥‡∏°",
                "‡∏à‡∏∏‡∏î‡∏ó‡∏¥‡πâ‡∏á‡∏Ç‡∏¢‡∏∞‡πÅ‡∏•‡∏∞‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡∏¢‡∏∞",
              ].map((amenity) => (
                <div key={amenity} className="flex items-center space-x-2">
                  <Checkbox
                    id={amenity}
                    checked={amenities.includes(amenity)}
                    onCheckedChange={(checked) =>
                      handleAmenityChange(amenity, !!checked)
                    }
                  />
                  <Label htmlFor={amenity}>{amenity}</Label>
                </div>
              ))}
            </div>

            <div>
              <Label htmlFor="bathroom-details">
                ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡πÅ‡∏•‡∏∞‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏∏‡∏Ç‡∏≤
              </Label>
              <Input
                id="bathroom-details"
                placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô 4 ‡∏´‡πâ‡∏≠‡∏á, ‡∏™‡∏∞‡∏≠‡∏≤‡∏î, ‡∏°‡∏µ‡∏ô‡πâ‡∏≥‡∏£‡πâ‡∏≠‡∏ô"
                className="mt-1"
              />
            </div>
          </CardContent>
        </Card>

        {/* ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ */}
        <Card>
          <CardHeader>
            <CardTitle className="text-2xl text-red-700">
              5. ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              {[
                "‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ (‡∏Å‡∏•‡πâ‡∏≠‡∏á CCTV, ‡∏£‡∏õ‡∏†.)",
                "‡πÅ‡∏™‡∏á‡∏™‡∏ß‡πà‡∏≤‡∏á‡πÉ‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏î‡∏£‡∏ñ‡πÅ‡∏•‡∏∞‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô",
              ].map((amenity) => (
                <div key={amenity} className="flex items-center space-x-2">
                  <Checkbox
                    id={amenity}
                    checked={amenities.includes(amenity)}
                    onCheckedChange={(checked) =>
                      handleAmenityChange(amenity, !!checked)
                    }
                  />
                  <Label htmlFor={amenity}>{amenity}</Label>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>

        {/* ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏£‡∏¥‡∏°‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏≠‡∏∑‡πà‡∏ô‡πÜ */}
        <Card>
          <CardHeader>
            <CardTitle className="text-2xl text-red-700">
              6. ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏£‡∏¥‡∏°‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏≠‡∏∑‡πà‡∏ô‡πÜ
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-6">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              {[
                "‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á",
                "‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ã‡∏±‡∏Å‡∏£‡∏µ‡∏î",
                "‡∏à‡∏∏‡∏î‡∏ä‡∏≤‡∏£‡πå‡∏à‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå‡πÑ‡∏ü‡∏ü‡πâ‡∏≤",
                "‡∏à‡∏∏‡∏î‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß",
              ].map((amenity) => (
                <div key={amenity} className="flex items-center space-x-2">
                  <Checkbox
                    id={amenity}
                    checked={amenities.includes(amenity)}
                    onCheckedChange={(checked) =>
                      handleAmenityChange(amenity, !!checked)
                    }
                  />
                  <Label htmlFor={amenity}>{amenity}</Label>
                </div>
              ))}
            </div>

            <div>
              <Label htmlFor="additional-services">‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏≠‡∏∑‡πà‡∏ô‡πÜ</Label>
              <Textarea
                id="additional-services"
                placeholder="‡∏£‡∏∞‡∏ö‡∏∏‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏≠‡∏∑‡πà‡∏ô‡πÜ"
                className="mt-1"
                rows={3}
              />
            </div>
          </CardContent>
        </Card>

        {/* ‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏Å‡∏≤‡∏®‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πà‡∏á‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏° */}
        <Card>
          <CardHeader>
            <CardTitle className="text-2xl text-red-700">
              7. ‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏Å‡∏≤‡∏®‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πà‡∏á‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-6">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              {[
                "‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏á‡∏µ‡∏¢‡∏ö‡∏™‡∏á‡∏ö‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß",
                "‡∏°‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏ß‡∏ô",
              ].map((amenity) => (
                <div key={amenity} className="flex items-center space-x-2">
                  <Checkbox
                    id={amenity}
                    checked={amenities.includes(amenity)}
                    onCheckedChange={(checked) =>
                      handleAmenityChange(amenity, !!checked)
                    }
                  />
                  <Label htmlFor={amenity}>{amenity}</Label>
                </div>
              ))}
            </div>

            <div>
              <Label htmlFor="location-features">‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà</Label>
              <Input
                id="location-features"
                placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏£‡∏¥‡∏°‡πÅ‡∏°‡πà‡∏ô‡πâ‡∏≥, ‡∏†‡∏π‡πÄ‡∏Ç‡∏≤, ‡πÉ‡∏Å‡∏•‡πâ‡∏ó‡∏∞‡πÄ‡∏•"
                className="mt-1"
              />
            </div>
          </CardContent>
        </Card>

        {/* ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å */}
        <Card>
          <CardHeader>
            <CardTitle className="text-2xl text-red-700">
              8. ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div>
              <Label htmlFor="price-range">‡∏ä‡πà‡∏ß‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏Ñ‡∏∑‡∏ô *</Label>
              <Input
                id="price-range"
                placeholder="‡πÄ‡∏ä‡πà‡∏ô 500-1,200 ‡∏ö‡∏≤‡∏ó"
                required
                className="mt-1"
              />
            </div>
          </CardContent>
        </Card>

        {/* ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û */}
        <Card>
          <CardHeader>
            <CardTitle className="text-2xl text-red-700">
              9. ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div>
              <Label htmlFor="photos">‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å *</Label>
              <div className="mt-1 border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-gray-400 transition-colors">
                <Upload className="h-8 w-8 mx-auto text-gray-400" />
                <p className="mt-2 text-sm text-gray-600">
                  ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏°‡∏≤‡∏ß‡∏≤‡∏á
                </p>
                <input
                  type="file"
                  id="photos"
                  multiple
                  accept="image/*"
                  className="hidden"
                />
              </div>
            </div>
            <div>
              <Label htmlFor="documents">
                ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏à‡∏î‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
              </Label>
              <div className="mt-1 border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-gray-400 transition-colors">
                <Upload className="h-8 w-8 mx-auto text-gray-400" />
                <p className="mt-2 text-sm text-gray-600">
                  ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏°‡∏≤‡∏ß‡∏≤‡∏á
                </p>
                <input
                  type="file"
                  id="documents"
                  multiple
                  accept=".pdf,.doc,.docx,.jpg,.png"
                  className="hidden"
                />
              </div>
            </div>
          </CardContent>
        </Card>

        {/* ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á */}
        <Card>
          <CardHeader>
            <CardTitle className="text-2xl text-red-700 flex items-center gap-2">
              <MapPin className="h-6 w-6" />
              10. ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <p className="text-sm text-gray-600">
              ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≤‡∏Å‡∏´‡∏°‡∏∏‡∏î‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
            </p>
            {/* <InteractiveMap
              coordinates={coordinates}
              onCoordinatesChange={setCoordinates}
            /> */}
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <Label htmlFor="latitude">‡∏•‡∏∞‡∏ï‡∏¥‡∏à‡∏π‡∏î</Label>
                <Input
                  id="latitude"
                  value={coordinates.lat.toFixed(6)}
                  readOnly
                  className="mt-1 bg-gray-50"
                />
              </div>
              <div>
                <Label htmlFor="longitude">‡∏•‡∏≠‡∏á‡∏à‡∏¥‡∏à‡∏π‡∏î</Label>
                <Input
                  id="longitude"
                  value={coordinates.lng.toFixed(6)}
                  readOnly
                  className="mt-1 bg-gray-50"
                />
              </div>
            </div>
          </CardContent>
        </Card>

        {/* ‡∏Å‡∏é‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏û‡∏±‡∏Å */}
        <Card>
          <CardHeader>
            <CardTitle className="text-2xl text-red-700">
              11. ‡∏Å‡∏é‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏û‡∏±‡∏Å
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <Label htmlFor="checkin-time">‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏¥‡∏ô</Label>
                <Select value={checkinTime} onValueChange={setCheckinTime}>
                  <SelectTrigger className="mt-1">
                    <SelectValue placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏¥‡∏ô" />
                  </SelectTrigger>
                  <SelectContent className="bg-white max-h-60">
                    {timeOptions.map((time) => (
                      <SelectItem key={`checkin-${time}`} value={time}>
                        {time}
                      </SelectItem>
                    ))}
                  </SelectContent>
                </Select>
              </div>
              <div>
                <Label htmlFor="checkout-time">‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏≠‡πä‡∏≤‡∏ó‡πå</Label>
                <Select value={checkoutTime} onValueChange={setCheckoutTime}>
                  <SelectTrigger className="mt-1">
                    <SelectValue placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏≠‡πä‡∏≤‡∏ó‡πå" />
                  </SelectTrigger>
                  <SelectContent className="bg-white max-h-60">
                    {timeOptions.map((time) => (
                      <SelectItem key={`checkout-${time}`} value={time}>
                        {time}
                      </SelectItem>
                    ))}
                  </SelectContent>
                </Select>
              </div>
            </div>
            <div>
              <Label htmlFor="pet-policy">‡∏Å‡∏é‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á</Label>
              <Textarea
                id="pet-policy"
                placeholder="‡∏£‡∏∞‡∏ö‡∏∏‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á"
                className="mt-1"
                rows={2}
              />
            </div>
            <div>
              <Label htmlFor="noise-policy">
                ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ï‡πà‡∏≤‡∏á‡πÜ
              </Label>
              <Textarea
                id="noise-policy"
                placeholder="‡∏£‡∏∞‡∏ö‡∏∏‡∏Å‡∏é‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° ‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏á‡∏µ‡∏¢‡∏ö"
                className="mt-1"
                rows={2}
              />
            </div>
            <div>
              <Label htmlFor="booking-policy">‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</Label>
              <Textarea
                id="booking-policy"
                placeholder="‡∏£‡∏∞‡∏ö‡∏∏‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å ‡πÄ‡∏ä‡πà‡∏ô ‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏≠‡∏á‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤ ‡∏Ñ‡πà‡∏≤‡∏ò‡∏£‡∏£‡∏°‡πÄ‡∏ô‡∏µ‡∏¢‡∏°‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏ô"
                className="mt-1"
                rows={3}
              />
            </div>
          </CardContent>
        </Card>

        {/* ‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç */}
        <Card>
          <CardHeader>
            <CardTitle className="text-2xl text-red-700">
              12. ‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="flex items-start space-x-2">
              <Checkbox
                id="terms"
                checked={acceptTerms}
                onCheckedChange={(checked) => setAcceptTerms(!!checked)}
                className="mt-1"
              />
              <Label htmlFor="terms" className="text-sm leading-6">
                ‡∏Ç‡πâ‡∏≤‡∏û‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á‡πÅ‡∏•‡∏∞‡∏Ç‡∏≠‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÄ‡∏ô‡∏≠‡∏£‡πå
              </Label>
            </div>
          </CardContent>
        </Card>

        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏™‡πà‡∏á‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£ */}
        <div className="flex justify-center pt-6">
          <Button
            type="submit"
            size="lg"
            className="bg-red-600 hover:bg-red-700 text-white px-8 py-3 text-lg"
          >
            <Send className="h-5 w-5 mr-2" />
            ‡∏™‡πà‡∏á‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£
          </Button>
        </div>
      </form>
    </div>
  );
};
export default RegisterForm;
